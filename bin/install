#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var prompt = require('prompt');

prompt.start();

prompt.get([{
    name: "db_host",
    description: "Host name/address for MongoDB",
    type: "string",
    default: "localhost",
    required: true
}, {
    name: "db_port",
    description: "MongoDB port",
    type: "number",
    default: 27017,
    required: true
}, {
    name: "db_username",
    description: "Username for MongoDB",
    type: "string",
    default: "root",
    required: true
}, {
    name: "db_password",
    description: "Password for MongoDB",
    type: "string",
    default: "root",
    // hidden: true,
    // replace: "*",
    required: true
}, {
    name: "db_dbname",
    description: "Name of your database",
    type: "string",
    default: "faceall_activex",
    pattern: /^[a-zA-Z][a-zA-Z0-9_]+$/,
    message: "Name can contain only letters, numbers and underline(_) and must start with a letter.",
    required: true
}, {
    name: "api_server",
    description: "Faceall service API server url (with version)",
    type: "string",
    default: "http://api.faceall.cn/v2",
    pattern: /^(http|https)\:\/\/[a-zA-Z][a-zA-Z0-9\.\/]+[a-zA-Z0-9]$/,
    message: "URL must be in http:// or https:// protocal, and do not have slash(/) at the end.",
    required: true
}, {
    name: "api_key",
    description: "Faceall service API Key",
    type: "string",
    default: "KUYVaAd06zoWfBFS2M9N6qfGKgVS1v7Ckx1cPnhQ",
    pattern: /^[a-zA-Z0-9]+$/,
    message: "Key can contain only letters and numbers.",
    required: true
}, {
    name: "api_secret",
    description: "Faceall service API Secret",
    type: "string",
    default: "4uSTnMDZqXqurWa4JwLT6YsSti4cth6R0K0JcdsL",
    pattern: /^[a-zA-Z0-9]+$/,
    message: "Secret can contain only letters and numbers.",
    required: true
}], function(err, result) {
    if (err) {
        console.error(err);
        return;
    }
    var result_obj = {
        "db": {
            "host": result.db_host,
            "port": result.db_port,
            "username": result.db_username,
            "password": result.db_password,
            "dbname": result.db_dbname
        },
        "api": {
            "server": result.api_server,
            "key": result.api_key,
            "secret": result.api_secret
        }
    };
    fs.writeFile(path.join(__dirname, '../config.json'), JSON.stringify(result_obj, null, 4), function() {
        console.log("Installation complete.");
        console.log("    You can view the configurations in config.json,");
        console.log("    and you can run this installer again to refresh the configurations.")
    });
});